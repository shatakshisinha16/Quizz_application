{"ast":null,"code":"var _jsxFileName = \"D:\\\\Area 51\\\\Quiz_App-main\\\\quiz_app\\\\frontend\\\\src\\\\components\\\\PlayQuiz.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { getQuiz, createRanking } from '../api';\nimport { v4 } from 'uuid';\nimport { RefreshContext } from './ContextRefresh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayQuiz = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [quiz, setQuiz] = React.useState(null);\n  const [currentQuestion, setCurrentQuestion] = React.useState({\n    _id: '',\n    type: 'single',\n    question: '',\n    correctAnswer: [],\n    answers: []\n  });\n  const [currentQuestionIndex, setCurrentQuestionIndex] = React.useState(0);\n  const [score, setScore] = React.useState(0);\n  const [playerName, setPlayerName] = React.useState('');\n  const playerNameInput = React.useRef(null);\n  const {\n    refresh,\n    setRefresh\n  } = React.useContext(RefreshContext);\n  const [myAnswers, setMyAnswers] = React.useState([]);\n  const [approved, setApproved] = React.useState(false);\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    getQuiz(id).then(quiz => {\n      if (quiz.randomAnswersPlacement) {\n        quiz.questions.forEach(question => {\n          question.answers.sort(() => Math.random() - 0.5);\n        });\n      }\n      if (quiz.randomQuestionsPlacement) {\n        quiz === null || quiz === void 0 ? void 0 : quiz.questions.sort(() => Math.random() - 0.5);\n      }\n      setCurrentQuestion(quiz.questions[currentQuestionIndex]);\n      setQuiz(quiz);\n    });\n  }, []);\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen text-3xl flex justify-center items-center text-gray-500\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  const handleNextQuestion = index => {\n    if (index >= 0 && index < (quiz === null || quiz === void 0 ? void 0 : quiz.questions.length)) {\n      setCurrentQuestion(quiz === null || quiz === void 0 ? void 0 : quiz.questions[index]);\n      setCurrentQuestionIndex(index);\n      setMyAnswers([]);\n      setApproved(false);\n      const elements = document.getElementsByTagName(\"input\");\n      for (let i = 0; i < elements.length; i++) {\n        if (elements[i].type === \"radio\") {\n          elements[i].checked = false;\n        } else if (elements[i].type === \"text\") {\n          elements[i].value = '';\n        }\n      }\n    } else if (index >= (quiz === null || quiz === void 0 ? void 0 : quiz.questions.length)) {\n      setCurrentQuestionIndex(index);\n    }\n  };\n  const handleAnswerSelect = answer => {\n    if (currentQuestion.type !== 'single' && currentQuestion.type !== 'multiple') {\n      setMyAnswers([answer]);\n    } else {\n      if (!myAnswers.includes(answer)) {\n        const newAnswers = [...myAnswers, answer];\n        setMyAnswers(newAnswers);\n      } else {\n        const newAnswers = myAnswers.filter(my => my !== answer);\n        setMyAnswers(newAnswers);\n      }\n    }\n  };\n  const handleApprove = () => {\n    if ((currentQuestion.type === 'short' || currentQuestion.type === 'fillblank') && myAnswers[0].toLowerCase() === currentQuestion.correctAnswer[0].toLowerCase()) {\n      setScore(score + 1);\n    } else if (myAnswers.length === currentQuestion.correctAnswer.length) {\n      const founded = myAnswers.some(a => currentQuestion.correctAnswer.includes(a));\n      if (founded) {\n        setScore(score + 1);\n      } else if (!founded && quiz.negativePoints && score > 0) {\n        setScore(score - 1);\n      }\n    } else if (quiz.negativePoints && score > 0) {\n      setScore(score - 1);\n    }\n    setApproved(true);\n  };\n  const handleFinish = () => {\n    const newRanking = {\n      _id: v4(),\n      quizId: id,\n      playerName: playerName,\n      score: score,\n      date: new Date().toLocaleDateString(\"pl-PL\")\n    };\n    createRanking(id, newRanking).then(() => setRefresh(!refresh));\n    navigate(`/quiz/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen font-bold text-center text-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/quiz/${quiz._id}`,\n        className: \"text-xl font-bold rounded-xl bg-green-500 text-white w-fit p-4 px-8 mx-4 fixed left-0 top-25 hover:bg-green-600 shadow-xl\",\n        children: \"Return\"\n      }, quiz._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), playerName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"break-words bg-white h-full min-w-96 min-h-48 rounded-xl shadow-xl p-4 m-4 mx-auto flex flex-col justify-center w-fit text-gray-500\",\n      children: currentQuestionIndex === (quiz === null || quiz === void 0 ? void 0 : quiz.questions.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score is \", score, \" out of \", quiz === null || quiz === void 0 ? void 0 : quiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 text-white p-4 w-fit hover:bg-green-600 rounded-xl shadow-xl\",\n          onClick: handleFinish,\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), currentQuestion.type === 'truefalse' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"truefalse\",\n              value: \"true\",\n              onChange: () => {\n                handleAnswerSelect(\"true\");\n              },\n              disabled: approved\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), \"True\", approved ? currentQuestion.correctAnswer[0] === \"true\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-500\",\n              children: \"Correct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500\",\n              children: \"Incorrect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"truefalse\",\n              value: \"false\",\n              onChange: () => {\n                handleAnswerSelect(\"false\");\n              },\n              disabled: approved\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this), \"False\", approved ? currentQuestion.correctAnswer[0] === \"false\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-500\",\n              children: \"Correct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500\",\n              children: \"Incorrect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this) : currentQuestion.type === 'dropdown' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"p-4 hover:bg-gray-100 rounded-xl m-4 shadow-xl\",\n            name: \"select\",\n            onChange: e => {\n              handleAnswerSelect(e.target.value);\n            },\n            disabled: approved,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Wybierz z listy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this), currentQuestion.answers.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), approved ? currentQuestion.correctAnswer.includes(myAnswers[0]) ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-500\",\n            children: \"Correct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500\",\n            children: \"Incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this) : currentQuestion.type === 'short' || currentQuestion.type === 'fillblank' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"p-4 hover:bg-gray-100 rounded-xl m-4 shadow-xl\",\n            type: \"text\",\n            name: \"short\",\n            onChange: e => {\n              handleAnswerSelect(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), approved ? currentQuestion.correctAnswer[0].toLowerCase().includes(myAnswers[0].toLowerCase()) ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-500\",\n            children: \"Correct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500\",\n            children: \"Incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 23\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this) : currentQuestion.type === 'single' || currentQuestion.type === 'multiple' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"flex flex-row justify-between w-full mt-8 p-8\",\n            children: currentQuestion.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `bg-slate-200 m-4 p-4 w-fit hover:bg-slate-300 rounded-xl shadow-xl ${myAnswers.includes(answer) ? 'bg-cyan-500 hover:bg-cyan-600 text-white' : ''}`,\n                onClick: () => handleAnswerSelect(answer),\n                disabled: approved,\n                children: answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this), approved ? currentQuestion.correctAnswer.includes(answer) ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-green-500\",\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500\",\n                children: \"Incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 27\n              }, this) : null]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 16\n        }, this) : null, !approved ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 text-white p-4 w-fit hover:bg-green-600 rounded-xl shadow-xl\",\n          onClick: () => {\n            handleApprove();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 text-white p-4 w-fit hover:bg-green-600 rounded-xl shadow-xl\",\n          onClick: () => {\n            handleNextQuestion(currentQuestionIndex + 1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"h-full flex flex-col justify-center items-center align-center\",\n      onSubmit: e => {\n        e.preventDefault();\n        if (playerNameInput && playerNameInput.current) {\n          setPlayerName(playerNameInput.current.value);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter player name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"p-4 hover:bg-gray-100 rounded-xl m-4 shadow-xl\",\n        ref: playerNameInput,\n        name: \"name\",\n        type: \"text\",\n        id: \"playerName\",\n        placeholder: \"Enter name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"text-xl font-bold rounded-xl bg-green-500 text-white w-fit p-4 px-8 mx-4 hover:bg-green-600 shadow-xl\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayQuiz, \"iwaeCuZL8j/Q+KAYX7SZNxTiugg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PlayQuiz;\nvar _c;\n$RefreshReg$(_c, \"PlayQuiz\");","map":{"version":3,"names":["React","useParams","useNavigate","Link","getQuiz","createRanking","v4","RefreshContext","PlayQuiz","id","quiz","setQuiz","useState","currentQuestion","setCurrentQuestion","_id","type","question","correctAnswer","answers","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","playerName","setPlayerName","playerNameInput","useRef","refresh","setRefresh","useContext","myAnswers","setMyAnswers","approved","setApproved","navigate","useEffect","then","randomAnswersPlacement","questions","forEach","sort","Math","random","randomQuestionsPlacement","handleNextQuestion","index","length","elements","document","getElementsByTagName","i","checked","value","handleAnswerSelect","answer","includes","newAnswers","filter","my","handleApprove","toLowerCase","founded","some","a","negativePoints","handleFinish","newRanking","quizId","date","Date","toLocaleDateString","e","target","map","option","preventDefault","current"],"sources":["D:/Area 51/Quiz_App-main/quiz_app/frontend/src/components/PlayQuiz.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { Quiz as QuizType, Question } from '../models';\nimport { getQuiz, createRanking } from '../api';\nimport { v4 } from 'uuid'\nimport { RefreshContext } from './ContextRefresh';\n\nexport const PlayQuiz: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const [quiz, setQuiz] = React.useState<QuizType | null>(null);\n  const [currentQuestion, setCurrentQuestion] = React.useState<Question | null>({\n    _id: '',\n    type: 'single',\n    question: '',\n    correctAnswer: [],\n    answers: []\n  });\n  const [currentQuestionIndex, setCurrentQuestionIndex] = React.useState<number>(0);\n  const [score, setScore] = React.useState<number>(0);\n  const [playerName, setPlayerName] = React.useState<string>('');\n  const playerNameInput = React.useRef<HTMLInputElement>(null);\n  const { refresh, setRefresh } = React.useContext(RefreshContext);\n  const [ myAnswers, setMyAnswers ] = React.useState<string[]>([]);\n  const [ approved, setApproved] = React.useState<boolean>(false);\n\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    getQuiz(id).then((quiz) => {\n      if (quiz.randomAnswersPlacement) {\n        quiz.questions.forEach((question: Question) => {\n          question.answers.sort(() => Math.random() - 0.5)\n        });\n      }\n      if (quiz.randomQuestionsPlacement) {\n        quiz?.questions.sort(() => Math.random() - 0.5);\n      }\n      setCurrentQuestion(quiz.questions[currentQuestionIndex]);\n      setQuiz(quiz);\n    });\n  }, []);\n\n\n  if (!quiz) {\n    return <div className=\"min-h-screen text-3xl flex justify-center items-center text-gray-500\">Loading...</div>;\n  }\n\n  const handleNextQuestion = (index: number) => {\n    if (index >= 0 && index < quiz?.questions.length) {\n      setCurrentQuestion(quiz?.questions[index]);\n      setCurrentQuestionIndex(index);\n      setMyAnswers([]);\n      setApproved(false);\n      const elements = document.getElementsByTagName(\"input\");\n      for (let i = 0; i < elements.length; i++) {\n              if (elements[i].type === \"radio\") {\n                  elements[i].checked = false;\n              }\n              else if (elements[i].type === \"text\") {\n                elements[i].value = '';\n              }\n          }\n    }\n    else if (index >= quiz?.questions.length) {\n      setCurrentQuestionIndex(index);\n    }\n  }\n\n  const handleAnswerSelect = (answer: string) => {\n    if (currentQuestion.type !== 'single' && currentQuestion.type !== 'multiple') {\n      setMyAnswers([answer]);\n    }\n    else {\n      if (!myAnswers.includes(answer)) {\n        const newAnswers = [...myAnswers, answer];\n        setMyAnswers(newAnswers)\n      }\n      else {\n        const newAnswers = myAnswers.filter((my) => my !== answer);\n        setMyAnswers(newAnswers);\n      }\n    }\n    \n  }\n\n  const handleApprove = () => {\n    if ((currentQuestion.type === 'short' || currentQuestion.type === 'fillblank') && myAnswers[0].toLowerCase() === currentQuestion.correctAnswer[0].toLowerCase()) {\n      setScore(score + 1);\n    }\n    else if (myAnswers.length === currentQuestion.correctAnswer.length) {\n      const founded = myAnswers.some(a=> currentQuestion.correctAnswer.includes(a))\n      if (founded) {\n        setScore(score + 1);\n      }\n      else if (!founded && quiz.negativePoints && score > 0) {\n        setScore(score - 1);\n      }\n    }\n    else if (quiz.negativePoints && score > 0) {\n      setScore(score - 1);\n    }\n    \n    setApproved(true);\n  }\n\n  const handleFinish = () => {\n    const newRanking = {\n      _id: v4(),\n      quizId: id,\n      playerName: playerName,\n      score: score,\n      date: new Date().toLocaleDateString(\"pl-PL\"),\n    };\n    createRanking(id, newRanking).then(() => setRefresh(!refresh));\n    navigate(`/quiz/${id}`);\n  };\n\n  return (\n    <div className=\"min-h-screen font-bold text-center text-xl\">\n      <div>\n        <Link to={`/quiz/${quiz._id}`} key={quiz._id} className=\"text-xl font-bold rounded-xl bg-green-500 text-white w-fit p-4 px-8 mx-4 fixed left-0 top-25 hover:bg-green-600 shadow-xl\">\n          Return\n        </Link>\n      </div>\n      {playerName ?\n        <div className=\"break-words bg-white h-full min-w-96 min-h-48 rounded-xl shadow-xl p-4 m-4 mx-auto flex flex-col justify-center w-fit text-gray-500\">\n          {currentQuestionIndex === quiz?.questions.length ?\n            <div>\n              <p>Your score is {score} out of {quiz?.questions.length}</p>\n              <button className=\"bg-green-500 text-white p-4 w-fit hover:bg-green-600 rounded-xl shadow-xl\" onClick={handleFinish}>Finish</button>\n            </div>\n            :\n            <div>\n              <h2>{currentQuestion.question}</h2>\n\n              {currentQuestion.type === 'truefalse' ? (\n                <div className=\"flex flex-col\">\n                  <label>\n                    <input type=\"radio\" name=\"truefalse\" value=\"true\" onChange={() => {\n                      handleAnswerSelect(\"true\");\n                    }} disabled={approved} />\n                    True\n                    {approved ?\n                      currentQuestion.correctAnswer[0] === \"true\" ?\n                        <p className=\"text-green-500\">Correct</p>\n                        :\n                        <p className=\"text-red-500\">Incorrect</p>\n                    :\n                    null}\n                  </label>\n                  <label>\n                    <input type=\"radio\" name=\"truefalse\" value=\"false\" onChange={() => {\n                      handleAnswerSelect(\"false\");\n                    }}  disabled={approved} />\n                    False\n                    {approved ?\n                      currentQuestion.correctAnswer[0] === \"false\" ?\n                        <p className=\"text-green-500\">Correct</p>\n                        :\n                        <p className=\"text-red-500\">Incorrect</p>\n                    :\n                    null}\n                  </label>\n                </div>\n              ) : currentQuestion.type === 'dropdown' ? (\n                <div>\n                <select className='p-4 hover:bg-gray-100 rounded-xl m-4 shadow-xl' name=\"select\" onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                  handleAnswerSelect(e.target.value)\n                  }} disabled={approved}>\n                    <option value=\"\">Wybierz z listy</option>\n                  {currentQuestion.answers.map(option => (\n                    <option key={option} value={option}>{option}</option>\n                    ))}\n                </select>\n                {approved ?\n                  currentQuestion.correctAnswer.includes(myAnswers[0]) ?\n                    <p className=\"text-green-500\">Correct</p>\n                    :\n                    <p className=\"text-red-500\">Incorrect</p>\n                :\n                null}\n                </div>\n              )\n              : currentQuestion.type === 'short' || currentQuestion.type === 'fillblank' ? (\n                <div>\n                <input className='p-4 hover:bg-gray-100 rounded-xl m-4 shadow-xl' type='text' name='short' onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  handleAnswerSelect(e.target.value)}}></input>\n                  {approved ?\n                    currentQuestion.correctAnswer[0].toLowerCase().includes(myAnswers[0].toLowerCase()) ?\n                      <p className=\"text-green-500\">Correct</p>\n                      :\n                      <p className=\"text-red-500\">Incorrect</p>\n                  :\n                  null}\n                  </div>\n              ) \n                : currentQuestion.type === 'single' || currentQuestion.type === 'multiple' ? \n              (<div>\n                <ul className=\"flex flex-row justify-between w-full mt-8 p-8\">\n                  {currentQuestion.answers.map((answer: string, index: number) => (\n                    <li key={index}>\n                      <button className={`bg-slate-200 m-4 p-4 w-fit hover:bg-slate-300 rounded-xl shadow-xl ${myAnswers.includes(answer) ? 'bg-cyan-500 hover:bg-cyan-600 text-white' : ''}`}\n                        onClick={() => handleAnswerSelect(answer)}\n                        disabled={approved}>\n                        {answer}\n                      </button>\n                      {approved ?\n                        currentQuestion.correctAnswer.includes(answer) ?\n                          <p className=\"text-green-500\">Correct</p>\n                          :\n                          <p className=\"text-red-500\">Incorrect</p>\n                      :\n                      null}\n                    </li>\n\n                  ))}\n                </ul>\n              </div>\n              ) : null }\n\n              {!approved ? \n                <button className=\"bg-green-500 text-white p-4 w-fit hover:bg-green-600 rounded-xl shadow-xl\" onClick={() => {\n                  handleApprove();\n                }}>Submit</button>\n                :\n                <button className=\"bg-green-500 text-white p-4 w-fit hover:bg-green-600 rounded-xl shadow-xl\" onClick={() => {\n                  handleNextQuestion(currentQuestionIndex + 1);\n                }}>Next</button>\n              }\n            </div>\n          }\n        </div>\n        :\n        <form className=\"h-full flex flex-col justify-center items-center align-center\" onSubmit={(e) => {\n          e.preventDefault();\n          if (playerNameInput && playerNameInput.current) {\n            setPlayerName(playerNameInput.current.value);\n          }\n        }}>\n          <label>Enter player name:</label>\n          <input className='p-4 hover:bg-gray-100 rounded-xl m-4 shadow-xl' ref={playerNameInput} name=\"name\" type=\"text\" id=\"playerName\" placeholder=\"Enter name\" required />\n          <button type=\"submit\" className=\"text-xl font-bold rounded-xl bg-green-500 text-white w-fit p-4 px-8 mx-4 hover:bg-green-600 shadow-xl\">\n            Play\n          </button>\n        </form>}\n\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}